//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        spotlight_right {
            bindings = <&kp RG(SPACE)>;
            key-positions = <16 17 18>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <23 24>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
        };

        left_bootloader {
            bindings = <&bootloader>;
            key-positions = <34 10 11 12 13>;
        };

        right_boodloader {
            bindings = <&bootloader>;
            key-positions = <35 16 18 17 19>;
        };

        left_sysreset {
            bindings = <&sys_reset>;
            key-positions = <10 11 12 13 32>;
        };

        right_reset {
            bindings = <&sys_reset>;
            key-positions = <37 16 17 18 19>;
        };

        l2 {
            bindings = <&sl 2>;
            key-positions = <3 1 2>;
        };

        l1 {
            bindings = <&sl 1>;
            key-positions = <11 12 13>;
        };

        l0 {
            bindings = <&sl 0>;
            key-positions = <22 23 24>;
        };

        open_brace {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        Open_curly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 13>;
        };

        open_sq_bckt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <24 25>;
        };

        close_bckt {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        close_curly_bckt {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <15 16>;
        };

        close_sq_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 27>;
        };

        bluetooth_clear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <20 31>;
        };

        bt_next {
            bindings = <&bt BT_NXT>;
            key-positions = <35 36 37>;
        };

        bt_prev {
            bindings = <&bt BT_PRV>;
            key-positions = <32 33 34>;
        };

        ai {
            bindings = <&kp LA(SPACE)>;
            key-positions = <6 7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
             &kp Q  &kp W       &kp E         &kp R        &kp T         &kp Y       &kp U          &kp I         &kp O       &kp P
             &kp A  &mt LALT S  &mt LCTRL D   &mt LSHFT F  &mt LGUI G    &mt RGUI H  &mt RSHFT J    &mt RCTRL K   &mt RALT L  &kp SEMI
&lt 2 GRAVE  &kp Z  &kp X       &kp C         &kp V        &kp B         &kp N       &kp M          &kp COMMA     &kp DOT     &kp FSLH  &lt 2 SINGLE_QUOTE
                                &lt 1 ESCAPE  &kp TAB      &kp ENTER     &kp SPACE   &kp BACKSPACE  &lt 1 DELETE
            >;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
           &kp CAPS         &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LGUI        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW       &kp NON_US_BACKSLASH
&kp MINUS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH          &kp DOLLAR      &kp PERCENT     &kp CARET       &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
                                          &trans            &kp TAB         &kp ENTER       &kp SPACE       &kp BACKSPACE   &trans
            >;
        };

        mouse {
            bindings = <
        &trans  &trans  &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &kp K_NEXT          &kp C_AC_BACK   &mkp LCLK       &mkp RCLK     &kp C_AC_FORWARD  &trans
        &trans  &trans  &kp K_MUTE         &kp C_BRI_AUTO        &kp K_PLAY_PAUSE    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT   &trans
&trans  &trans  &trans  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp K_PREV          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT   &trans  &trans
                        &trans             &trans                &trans              &trans          &trans          &trans
            >;
        };
    };
};
